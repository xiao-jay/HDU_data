9.27
双向链表常用于操作系统动态存储管理
用双向链表管理空闲存储单元

10.9
静态链表是用下标替代指针操作
二元表可以做多个一元多项式的相加减（还会涉及到对单个二元表的删除操作）
线性表的重点是“重操作”——需要多写写代码

重应用！
栈与队列（操作上受限制的线性表）
栈与队列重的数据类型相同（Elemtype）
an是栈顶 a1是栈底

工作栈的原理：
栈顶
从这儿一个个弹出
子程序2   地址
子程序1   地址
主信息   地址
栈底

队列：（食堂排队买饭）
a1队头删除 an队尾插入

s.base = s.top 判断空栈的条件
void clear(){s.top = s.base;}
Pop(&S, &e){e = * (s.top - 1);}

链栈在尽头端设置栈顶（不带头结点的前插法，使Pop操作的时间复杂度是O(1)）
p48-58 栈的应用

空队列的判准：Q.front = Q.rear 
队列中结点个数（元素个数）会影响删除队头元素操作的细节问题
if(Q.rear == p) Q.rear = Q.front //还原空表状态

队列的Destroy和单链表一样

顺序循环队列通过浪费一个元素空间 来实现判断队满队空
if(Q.front == (Q.rear +1) % Q.size) return "队满了"
//用模运算构建循环

链式循环队列一般需要加一个尾指针（也方便）							
不需要写Sqlist *L，不需要创建一个指向头结点的指针（浪费空间资源 同时也没必要！！）